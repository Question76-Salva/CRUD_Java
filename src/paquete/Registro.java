/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paquete;

import java.sql.*;

import javax.swing.JOptionPane;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class Registro extends javax.swing.JFrame {

    /**
     * Creates new form Registro
     */
    // === crear variable de tipo Conexion | llamamos a la clase a la cual nos vamos a conectar | 1 sóla instancia ===
    Conexion conectar = Conexion.getInstance();

    public Registro() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Registros a una Base de Datos");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        combo_facultad = new javax.swing.JComboBox<>();
        btn_registrar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        informacion = new javax.swing.JTextArea();
        btn_consultar = new javax.swing.JButton();
        btn_verificar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txt_buscar = new javax.swing.JTextField();
        btn_buscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Digite su nombre:");

        jLabel2.setText("Digite su teléfono:");

        txt_telefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_telefonoActionPerformed(evt);
            }
        });

        jLabel3.setText("Digite su facultad:");

        combo_facultad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Facultad", "Ingeniería de Sistemas", "Ingeniería Civíl", "Ingeniería Industrial", "Ingniería Química", "Ingeniería Electrónica", " " }));

        btn_registrar.setText("Registrar datos");
        btn_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarActionPerformed(evt);
            }
        });

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        informacion.setColumns(20);
        informacion.setRows(5);
        jScrollPane1.setViewportView(informacion);

        btn_consultar.setText("Consultar");
        btn_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultarActionPerformed(evt);
            }
        });

        btn_verificar.setText("Verificar si la BD tiene datos");
        btn_verificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_verificarActionPerformed(evt);
            }
        });

        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        btn_modificar.setText("Modificar");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        jLabel4.setText("Digite el ID a buscar:");

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_consultar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btn_verificar)
                        .addGap(28, 28, 28)
                        .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btn_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_nombre)
                                    .addComponent(txt_telefono)
                                    .addComponent(combo_facultad, 0, 280, Short.MAX_VALUE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_registrar, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(txt_buscar)
                            .addComponent(btn_buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(combo_facultad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_consultar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_verificar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_telefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_telefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telefonoActionPerformed

    private void btn_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarActionPerformed
        // ======================================
        // === botón INSERTAR/REGISTRAR DATOS ===
        // ======================================
        try {
            // === conectar con la bbdd  | guardar la conexión en la variable "conexion" ===
            Connection conexion = conectar.conectar();
            // ===  sentencia preparada para INSERTAR datos | los "?" son cada columna de la tabla ===
            PreparedStatement insertar = conexion.prepareStatement("INSERT INTO empleados VALUES(?,?,?,?)");
            // === primer ? -> es el id ===
            insertar.setString(1, "0");
            // === segundo ? -> es el nombre | obtener datos del input ===
            insertar.setString(2, txt_nombre.getText().trim());
            // === tercero ? -> es el teléfono | obtener datos del input ===
            insertar.setString(3, txt_telefono.getText().trim());
            // === cuarto ? -> es la profesión | obtener datos del input ===
            insertar.setString(4, combo_facultad.getSelectedItem().toString());
            // === actualizar los datos | muy importante ===
            insertar.executeUpdate();
            // === mensaje de confirmación ===
            JOptionPane.showMessageDialog(null, "Datos registrados");
            // === cerrar/desconectar la conexión a la bbdd ===
            conectar.cerrarConexion();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btn_registrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // =============================
        // === botón ACTUALIZAR DATOS ===
        // =============================

        // === limpiar los campos ===
        txt_nombre.setText("");
        txt_telefono.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_verificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_verificarActionPerformed
        // =======================================
        // === botón VERIFICAR si la bbdd tiene DATOS ===
        // =======================================
        try {
            // === conectar con la bbdd  | guardar la conexión en la variable "conexion" ===
            Connection conexion = conectar.conectar();
            // === seleccionar la tabla del formulario y verificar si hay o no datos en la tabla de la bbdd ===
            PreparedStatement seleccionar = conexion.prepareStatement("SELECT * FROM empleados");
            // === crear variable tipo ResulSet  que crea consultas | ejecutar la consulta sql ===
            ResultSet consulta = seleccionar.executeQuery();
            // === si la consulta cuenta/tiene una línea de caracteres/tiene datos... ===
            if (consulta.next()) {
                JOptionPane.showMessageDialog(null, "La base de datos tiene registros");
            } else {
                // en caso contrario | no tiene nada...
                JOptionPane.showMessageDialog(null, "La base de datos NO tiene registros");
            }

            // === cerrar la conexión ===
            conectar.cerrarConexion();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btn_verificarActionPerformed

    private void btn_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultarActionPerformed
        // ========================================
        // === botón CONSULTAR  traer datos a la tabla ===
        // ========================================

        // === refrescar | que no muestre lo anterior ===
        informacion.setText("");

        try {
            // === consulta a la bbdd y traer todos los datos de la tabla "empleados" ===

            // === conectar con la bbdd  | guardar la conexión en la variable "conexion" ===
            Connection conexion = conectar.conectar();
            // === seleccionar la tabla del formulario y verificar si hay o no datos en la tabla de la bbdd ===
            PreparedStatement seleccionar = conexion.prepareStatement("SELECT * FROM empleados");
            // === crear variable tipo ResulSet  que crea consultas | ejecutar la consulta sql ===
            ResultSet consulta = seleccionar.executeQuery();
            
            // === traer los datos desde la bbdd | si la "consulta" tiene datos/registros traerlos/capturarlos ===
            while (consulta.next()) {
                // === voy a añadir a ese campo lo que traiga de la columna número 1 que es la columa de "id" ===
                informacion.append(consulta.getString(1));
                informacion.append("         ");
                // === voy a añadir a ese campo lo que traiga de la columna número 2 que es la columa de "nombre" ===
                informacion.append(consulta.getString(2));
                informacion.append("         ");
                // === voy a añadir a ese campo lo que traiga de la columna número 3 que es la columa de "telefono" ===
                informacion.append(consulta.getString(3));
                informacion.append("         ");
                // === voy a añadir a ese campo lo que traiga de la columna número 4 que es la columa de "profesion" ===
                informacion.append(consulta.getString(4));
                // === salto de línea ===
                informacion.append("\n");
            }

            // === cerrar la conexión ===
            conectar.cerrarConexion();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error:  " + e);
        }
    }//GEN-LAST:event_btn_consultarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // ===================================
        // === botón ELIMINAR  registro de la tabla ===
        // ===================================
        try {
            // === conectar con la bbdd  | guardar la conexión en la variable "conexion" ===
            Connection conexion = conectar.conectar();
             // === eliminar del formulario el registro seleccionado en tabla de la bbdd ===
            PreparedStatement eliminar = conexion.prepareStatement("DELETE FROM empleados WHERE id = ?");
            // === obtener lo que que el usuario introduce por el input para eliminar ===
            eliminar.setString(1, txt_buscar.getText().trim());
            // === ejecutar la consulta sql ===
            eliminar.executeUpdate();
           // === mostrar mensaje de confirmación ===
            JOptionPane.showMessageDialog(null, "Registro eliminado");
                         
            // === cerrar la conexión ===
            conectar.cerrarConexion();           
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error:  " + e);
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        // ================================================
        // === botón MODIFICAR/ACTUALIZAR  registro de la tabla ===
        // ================================================
        try {
            // === conectar con la bbdd  | guardar la conexión en la variable "conexion" ===
            Connection conexion = conectar.conectar();
            // === guarda el valor del input | lo que ingrese el usuario ===
            String ID = txt_buscar.getText().trim();
            // === modificar del formulario el registro seleccionado en tabla de la bbdd ===
            PreparedStatement modificar = conexion.prepareStatement("UPDATE empleados SET nombre = ?, telefono = ?, profesion = ? WHERE id = " + ID);
            // === pasar valores | primer ? -> es el nombre ======
            modificar.setString(1, txt_nombre.getText().trim());
             // === pasar valores | segundo ? -> es el telefono ======
            modificar.setString(2, txt_telefono.getText().trim());
             // === pasar valores | tercer ? -> es la profesion ======
            modificar.setString(3, combo_facultad.getSelectedItem().toString());            
            // === ejecutar la consulta sql ===
            modificar.executeUpdate();
            // === mostrar mensaje de confirmación ===
            JOptionPane.showMessageDialog(null, "Registro modificado");
            
            // === cerrar la conexión ===
            conectar.cerrarConexion();              
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error:  " + e);
        }
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // ==================================
        // === botón BUSCAR  registro de la tabla ===
        // ==================================
        try {
            // === conectar con la bbdd  | guardar la conexión en la variable "conexion" ===
            Connection conexion = conectar.conectar();
             // === buscar del formulario el registro seleccionado en tabla de la bbdd ===
            PreparedStatement buscar = conexion.prepareStatement("SELECT * FROM empleados WHERE id = ?");
             // === pasar valores | primer ? -> es el ID ======
            buscar.setString(1, txt_buscar.getText().trim());
            // === crear variable tipo ResulSet  que crea consultas | ejecutar la consulta sql ===
            ResultSet consulta = buscar.executeQuery();
            
            // === traer los datos desde la bbdd | si la "consulta" tiene datos/registros traerlos/capturarlos ===
            while (consulta.next()) {
                // === pasar valores | valor 2 -> columna nombre ===
                txt_nombre.setText(consulta.getString("nombre"));
                // === pasar valores | valor 3 -> columna telefono ===
                txt_telefono.setText(consulta.getString("telefono"));
                // === pasar valores | valor 4 -> columna profesion ===
                combo_facultad.setSelectedItem(consulta.getString("profesion"));
                // === mostrar mensaje de confirmación ===
                JOptionPane.showMessageDialog(null, "Se encontraron los datos");
            }
            
             // === cerrar la conexión ===
            conectar.cerrarConexion();      
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error:  " + e);
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // === hacer visible el formulario | mostrar interface ===
                new Registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_consultar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JButton btn_registrar;
    private javax.swing.JButton btn_verificar;
    private javax.swing.JComboBox<String> combo_facultad;
    private javax.swing.JTextArea informacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_buscar;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
